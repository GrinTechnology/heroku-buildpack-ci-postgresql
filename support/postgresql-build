set -e

if [ ! -f "/var/cache/postgresql-$POSTGRESQL_VERSION.tar.gz" ]; then
  wget -q -O /var/cache/postgresql-$POSTGRESQL_VERSION.tar.gz http://ftp.postgresql.org/pub/source/v${POSTGRESQL_VERSION}/postgresql-${POSTGRESQL_VERSION}.tar.gz
fi

cd /var/cache/

tar zxf /var/cache/postgresql-$POSTGRESQL_VERSION.tar.gz

cd postgresql-$POSTGRESQL_VERSION

LDFLAGS='-Wl,--as-needed -Wl,-z,now'
CFLAGS='-fPIC -DLINUX_OOM_ADJ=0'

apt-get -y install uuid-dev

# keep this in sync with https://devcenter.heroku.com/articles/heroku-ci-in-dyno-databases#restrictions
./configure --prefix=/app/vendor/postgresql \
            --enable-integer-datetimes \
            --enable-thread-safety \
            --enable-debug \
            --disable-rpath \
            --with-gnu-ld \
            --with-pgport=5432 \
            --with-system-tzdata=/usr/share/zoneinfo \
            --without-tcl \
            --without-perl \
            --without-python \
            --with-krb5 \
            --with-gssapi \
            --with-openssl \
            --with-libxml \
            --with-libxslt \
            --with-uuid=e2fs

make
make install

cd contrib
make
make install

cd /app/vendor/postgresql

cp -rpH /usr/lib/postgresql/13/lib/postgis* ./lib

# FIXME This command fails, even though libgeos_c.so.1 is sitting there in ./lib right next to postgis-3.so
# ~$ psql -c "CREATE EXTENSION postgis" $DATABASE_URL
#  ERROR:  could not load library "/app/.indyno/vendor/postgresql/lib/postgis-3.so": libgeos_c.so.1: cannot open shared object file: No such file or directory
cp -rpH /usr/lib/x86_64-linux-gnu/libgeos* ./lib

cp -rpH /usr/share/postgresql/13/contrib/postgis* ./share/contrib
cp -rpH /usr/share/postgresql/13/extension/postgis* ./share/extension

tar -zcf - . | /gof3r put -b $S3_BUCKET -k $STACK_FOLDER/postgresql-$POSTGRESQL_VERSION.tgz --acl public-read
